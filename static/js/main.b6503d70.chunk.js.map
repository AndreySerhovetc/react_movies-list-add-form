{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","validUrl","state","isValidImgUrl","isValidImdbUrl","handleChange","event","target","name","value","setState","validatadeImgUrl","test","currentState","validatadeImdbUrl","resetForm","onSubmit","preventDefault","newFilm","props","addNewFilm","this","type","placeholder","onChange","required","onBlur","disabled","React","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6503d70.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  addNewFilm: (movie: Movie) => void;\n};\ntype State = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n  isValidImgUrl: boolean,\n  isValidImdbUrl: boolean,\n};\n\nexport class NewMovie extends React.Component<Props, State> {\n  validUrl = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isValidImgUrl: true,\n    isValidImdbUrl: true,\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    } as Pick<State, 'title' | 'description' | 'imdbId'>);\n  };\n\n  validatadeImgUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (this.validUrl.test(value)) {\n      this.setState({\n        imgUrl: value,\n        isValidImgUrl: true,\n      });\n    } else {\n      this.setState(currentState => ({\n        isValidImgUrl: !currentState.isValidImgUrl,\n      }));\n    }\n  };\n\n  validatadeImdbUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (this.validUrl.test(value)) {\n      this.setState({\n        imdbUrl: value,\n        isValidImdbUrl: true,\n      });\n    } else {\n      this.setState(currentState => ({\n        isValidImdbUrl: !currentState.isValidImdbUrl,\n      }));\n    }\n  };\n\n  resetForm = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imdbUrl: '',\n      imgUrl: '',\n      imdbId: '',\n    });\n  };\n\n  onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const {\n      title,\n      description,\n      imdbUrl,\n      imgUrl,\n      imdbId,\n    } = this.state;\n\n    const newFilm = {\n      title,\n      description,\n      imdbUrl,\n      imgUrl,\n      imdbId,\n    };\n\n    this.props.addNewFilm(newFilm);\n    this.resetForm();\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imdbUrl,\n      imgUrl,\n      imdbId,\n      isValidImgUrl,\n      isValidImdbUrl,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <div className=\"mb-3\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            className=\"form-control mb-3\"\n            placeholder=\"title\"\n            value={title}\n            onChange={this.handleChange}\n            required\n          />\n          <textarea\n            name=\"description\"\n            className=\"form-control mb-3\"\n            placeholder=\"description\"\n            value={description}\n            onChange={this.handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            className=\"form-control mb-3\"\n            placeholder=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleChange}\n            onBlur={this.validatadeImgUrl}\n            required\n          />\n          {!isValidImgUrl\n            && <span className=\"error\">Please enter correct url</span>}\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            className=\"form-control mb-3\"\n            placeholder=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n            onBlur={this.validatadeImdbUrl}\n            required\n          />\n          {!isValidImdbUrl\n            && <span className=\"error\">Please enter correct url</span>}\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            className=\"form-control mb-3\"\n            placeholder=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n            required\n          />\n        </div>\n        <div className=\"btn-group d-flex\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-success\"\n            disabled={!title || !imgUrl || !imdbId || !imdbUrl || !isValidImgUrl || !isValidImdbUrl}\n          >\n            Add film\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(currentState => ({\n      movies: [...currentState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addNewFilm={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}